---
kind: DeploymentConfig
apiVersion: v1
metadata:
  name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}-api
  labels:
    deployment: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}-deployment
{{if (env "GITLAB_DEPLOYMENT")}}
    gitlab-deployment: {{env "GITLAB_DEPLOYMENT"}}
{{end}}
spec:
  selector:
    name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}-api
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    recreateParams:
      mid:
        execNewPod:
          command:
          - scl
          - enable
          - rh-postgresql96
          - rh-python36
          - ./manage.py migrate
          containerName: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}-api
        failurePolicy: Abort
    type: Recreate
  template:
    metadata:
      labels:
        name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}-api
    spec:
      containers:
      - name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}-api
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-access-key-id
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-secret-access-key
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: AWS_DEFAULT_REGION
          valueFrom:
            configMapKeyRef:
              key: aws-default-region
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: AWS_SQS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-sqs-access-key-id
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: AWS_SQS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-sqs-secret-access-key
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: AWS_SQS_REGION
          valueFrom:
            configMapKeyRef:
              key: aws-sqs-region
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: AWS_NAME_PREFIX
          valueFrom:
            configMapKeyRef:
              key: aws-name-prefix
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: DJANGO_SETTINGS_MODULE
          valueFrom:
            configMapKeyRef:
              key: django-settings-module
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: django-secret-key
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: DJANGO_ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              key: django-allowed-hosts
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: DJANGO_DATABASE_NAME
          valueFrom:
            secretKeyRef:
              key: database-name
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: DJANGO_DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              key: django-database-host
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: DJANGO_DATABASE_USER
          valueFrom:
            secretKeyRef:
              key: database-username
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: DJANGO_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: DJANGO_DEBUG
          valueFrom:
            configMapKeyRef:
              key: django-debug
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: HOUNDIGRADE_ECS_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: aws-houndigrade-ecs-cluster-name
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: HOUNDIGRADE_ECS_IMAGE_NAME
          valueFrom:
            configMapKeyRef:
              key: aws-houndigrade-ecs-image-name
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: HOUNDIGRADE_ECS_FAMILY_NAME
          valueFrom:
            configMapKeyRef:
              key: aws-houndigrade-ecs-family-name
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: HOUNDIGRADE_AWS_AVAILABILITY_ZONE
          valueFrom:
            configMapKeyRef:
              key: aws-houndigrade-availability-zone
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: HOUNDIGRADE_AWS_AUTOSCALING_GROUP_NAME
          valueFrom:
            configMapKeyRef:
              key: aws-houndigrade-autoscaling-group-name
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: CLOUDTRAIL_EVENT_URL
          valueFrom:
            configMapKeyRef:
              key: aws-cloudtrail-event-url
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        image: ' '
        imagePullPolicy: Always
        resources:
          limits:
            memory: {{.api.memoryLimit}}
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - 'ps axo command | grep -v grep | grep gunicorn'
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - 'nc -U /var/run/cloudigrade/gunicorn.sock --send-only </dev/null'
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /var/run/cloudigrade
          name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}-socket
      - name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}nginx
        image: ' '
        imagePullPolicy: Always
        ports:
        - containerPort: {{.nginx.port}}
          protocol: TCP
        resources:
          limits:
            memory: {{.nginx.memoryLimit}}
        livenessProbe:
          tcpSocket:
            port: {{.nginx.port}}
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz/
            port: {{.nginx.port}}
            scheme: HTTP
            httpHeaders:
              - name: Host
                value: {{.healthCheckHostHeader}}
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /var/run/cloudigrade
          name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}-socket
      volumes:
      - name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}-socket
        emptyDir: {}
  triggers:
    - type: "ImageChange"
      imageChangeParams:
        automatic: {{.api.enableImageChangeTrigger}}
        containerNames:
          - {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}-api
        from:
          kind: ImageStreamTag
          name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.api.imageStreamName}}:{{.api.imageStreamTag}}
    - type: ImageChange
      imageChangeParams:
        automatic: {{.nginx.enableImageChangeTrigger}}
        containerNames:
          - {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}nginx
        from:
          kind: ImageStreamTag
          name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.nginx.imageStreamName}}:{{.nginx.imageStreamTag}}
    - type: ConfigChange
---
kind: DeploymentConfig
apiVersion: v1
metadata:
  name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}-celery
  labels:
    deployment: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}-deployment
{{if (env "GITLAB_DEPLOYMENT")}}
    gitlab-deployment: {{env "GITLAB_DEPLOYMENT"}}
{{end}}
spec:
spec:
  selector:
    name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}-celery
  replicas: {{.celery.replicaCount}}
  revisionHistoryLimit: 10
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}-celery
    spec:
      containers:
      - name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}-celery
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-access-key-id
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-secret-access-key
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: AWS_DEFAULT_REGION
          valueFrom:
            configMapKeyRef:
              key: aws-default-region
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: AWS_SQS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-sqs-access-key-id
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: AWS_SQS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-sqs-secret-access-key
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: AWS_SQS_REGION
          valueFrom:
            configMapKeyRef:
              key: aws-sqs-region
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: AWS_NAME_PREFIX
          valueFrom:
            configMapKeyRef:
              key: aws-name-prefix
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: DJANGO_SETTINGS_MODULE
          valueFrom:
            configMapKeyRef:
              key: django-settings-module
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: django-secret-key
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: DJANGO_ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              key: django-allowed-hosts
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: DJANGO_DATABASE_NAME
          valueFrom:
            secretKeyRef:
              key: database-name
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: DJANGO_DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              key: django-database-host
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: DJANGO_DATABASE_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: DJANGO_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: DJANGO_DEBUG
          valueFrom:
            configMapKeyRef:
              key: django-debug
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: HOUNDIGRADE_ECS_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: aws-houndigrade-ecs-cluster-name
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: HOUNDIGRADE_ECS_IMAGE_NAME
          valueFrom:
            configMapKeyRef:
              key: aws-houndigrade-ecs-image-name
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: HOUNDIGRADE_ECS_FAMILY_NAME
          valueFrom:
            configMapKeyRef:
              key: aws-houndigrade-ecs-family-name
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: HOUNDIGRADE_AWS_AVAILABILITY_ZONE
          valueFrom:
            configMapKeyRef:
              key: aws-houndigrade-availability-zone
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: HOUNDIGRADE_AWS_AUTOSCALING_GROUP_NAME
          valueFrom:
            configMapKeyRef:
              key: aws-houndigrade-autoscaling-group-name
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: SCALE_UP_INSPECTION_CLUSTER_SCHEDULE
          valueFrom:
            configMapKeyRef:
              key: aws-houndigrade-scale-up-cluster-schedule
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        - name: CLOUDTRAIL_EVENT_URL
          valueFrom:
            configMapKeyRef:
              key: aws-cloudtrail-event-url
              name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}
        image: ' '
        imagePullPolicy: Always
        command:
          - /bin/sh
          - -c
          - >
            PYTHONPATH=. scl enable rh-postgresql96 rh-python36 --
            celery -l info -A config worker --beat
            --scheduler django_celery_beat.schedulers:DatabaseScheduler
            -Q copy_ami_snapshot,copy_ami_to_customer_account,remove_snapshot_ownership,create_volume,delete_snapshot,enqueue_ready_volumes,scale_up_inspection_cluster,run_inspection_cluster,persist_inspection_cluster_results_task,scale_down_cluster,analyze_log
        resources:
          limits:
            memory: {{.celery.memoryLimit}}
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - 'ps axo command | grep -v grep | grep python'
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - '[[ $(ps axo command | grep "[p]ython" | grep celery | grep -c worker) -gt 1 ]]'
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
  triggers:
    - type: "ImageChange"
      imageChangeParams:
        automatic: {{.celery.enableImageChangeTrigger}}
        containerNames:
          - {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.name}}-celery
        from:
          kind: ImageStreamTag
          name: {{if (env "DEPLOYMENT_PREFIX")}}{{env "DEPLOYMENT_PREFIX"}}-{{end}}{{.celery.imageStreamName}}:{{.celery.imageStreamTag}}
    - type: ConfigChange
