{{if or (eq .env "local") (eq .env "review")}}
{{/* We only use buildconfigs if the environment is local, or review. */}}

{{/* Variables */}}
{{$prefix := or (env "DEPLOYMENT_PREFIX" | trunc 36) ""}}
{{$prefix := and $prefix (printf "-%s" $prefix)}}
{{$name := printf "%s%s" .name $prefix}}
{{$commit_ref_slug := env "CI_COMMIT_REF_SLUG"}}
{{$gitlab_deployment := env "GITLAB_DEPLOYMENT"}}

{{$nginx_imagestream_name := printf "%s%s" .nginx.imageStreamName $prefix}}
{{$nginx_imagestream_tag := .nginx.imageStreamTag}}

{{$api_imagestream_name := printf "%s%s" .api.imageStreamName $prefix}}
{{$api_imagestream_tag := .api.imageStreamTag}}

{{$nginx_base_image := .nginx.baseImage}}
{{$nginx_repo_context_dir := .nginx.repoContextDir}}
{{$nginx_repo_uri := ((env "NGINX_REPO_URI") | default .nginx.repoUri)}}
{{$nginx_repo_ref := ((env "NGINX_REPO_REF") | default .nginx.repoUriBranch)}}

{{$api_repo_uri := ((env "API_REPO_URI") | default .api.repoUri)}}
{{$api_repo_ref := ((env "API_REPO_REF") | default .api.repoUriBranch)}}

{{$api_limits_build_cpu_request := .api.limits.build.cpuRequest}}
{{$api_limits_build_mem_request := .api.limits.build.memRequest}}
{{$api_limits_build_cpu_limit := .api.limits.build.cpuLimit}}
{{$api_limits_build_mem_limit := .api.limits.build.memLimit}}

{{$nginx_limits_build_cpu_request := .nginx.limits.build.cpuRequest}}
{{$nginx_limits_build_mem_request := .nginx.limits.build.memRequest}}
{{$nginx_limits_build_cpu_limit := .nginx.limits.build.cpuLimit}}
{{$nginx_limits_build_mem_limit := .nginx.limits.build.memLimit}}

{{$not_local := ne .env "local"}}
{{$not_review := ne .env "review"}}
---
kind: BuildConfig
apiVersion: v1
metadata:
  name: {{$name}}-nginx
  labels:
{{if $commit_ref_slug}}
    app: {{$commit_ref_slug}}
{{end}}
    deployment: {{$name}}-deployment
{{if $gitlab_deployment}}
    gitlab-deployment: {{$gitlab_deployment}}
{{end}}
spec:
  failedBuildsHistoryLimit: 5
  output:
    to:
      kind: ImageStreamTag
      name: {{$nginx_imagestream_name}}:{{$nginx_imagestream_tag}}
  runPolicy: Serial
  source:
    contextDir: {{$nginx_repo_context_dir}}
    git:
      uri: {{$nginx_repo_uri}}
      ref: {{$nginx_repo_ref}}
    type: Git
  strategy:
    type: Source
    sourceStrategy:
      from:
        kind: DockerImage
        name: {{$nginx_base_image}}
  triggers:
{{if $not_review}}
  - type: ConfigChange
{{end}}
  - imageChange: {}
    type: ImageChange
{{if $not_local}}
{{/* Resource limits are only relevant when we're running in OSD */}}
  resources:
    requests:
      cpu: {{$nginx_limits_build_cpu_request}}
      memory: {{$nginx_limits_build_mem_request}}
    limits:
      cpu: {{$nginx_limits_build_cpu_limit}}
      memory: {{$nginx_limits_build_mem_limit}}
{{end}}
---
kind: BuildConfig
apiVersion: v1
metadata:
  name: {{$name}}-api
  labels:
{{if $commit_ref_slug}}
    app: {{$commit_ref_slug}}
{{end}}
    deployment: {{$name}}-deployment
{{if $gitlab_deployment}}
    gitlab-deployment: {{$gitlab_deployment}}
{{end}}
spec:
  failedBuildsHistoryLimit: 5
  runPolicy: Serial
  strategy:
    type: Docker
  source:
    type: Git
    git:
      uri: {{$api_repo_uri}}
      ref: {{$api_repo_ref}}
  output:
    to:
      kind: ImageStreamTag
      name: {{$api_imagestream_name}}:{{$api_imagestream_tag}}
  triggers:
{{if $not_review}}
  - type: ConfigChange
{{end}}
  - imageChange: {}
    type: ImageChange
{{if $not_local}}
  resources:
    requests:
      cpu: {{$api_limits_build_cpu_request}}
      memory: {{$api_limits_build_mem_request}}
    limits:
      cpu: {{$api_limits_build_cpu_limit}}
      memory: {{$api_limits_build_mem_limit}}
{{end}}
{{end}}
